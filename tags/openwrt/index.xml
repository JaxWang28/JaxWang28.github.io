<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenWRT on Jackson Blog</title>
    <link>https://blog.jaxwang.top/tags/openwrt/</link>
    <description>Recent content in OpenWRT on Jackson Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Jul 2024 18:30:52 +0800</lastBuildDate>
    <atom:link href="https://blog.jaxwang.top/tags/openwrt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenWRT 编译个人软件包</title>
      <link>https://blog.jaxwang.top/p/openwrt_add_new_package_compile/</link>
      <pubDate>Sat, 27 Jul 2024 18:30:52 +0800</pubDate>
      <guid>https://blog.jaxwang.top/p/openwrt_add_new_package_compile/</guid>
      <description>最权威官方指导： https://openwrt.org/docs/guide-developer/helloworld/start&#xA;OpenWRT 编译系统准备 源码下载 git clone https://github.com/openwrt/openwrt.git 版本更改 git checkout v23.05.4 make distclean 安装更新 feeds 避免后面出现问题 ./scripts/feeds update -a ./scripts/feeds install -a 配置交叉编译环境 make menuconfig 编译交叉工具链 make toolchain/install 调整 PATH 环境变量 目标无关工具和工具链被部署到 staging_dir/host/ 和 staging_dir/toolchain/ 目录。staging_dir/host/bin 可以找到相关的可执行文件。我们将其添加到 PATH 环境变量中方便我们直接使用。 export PATH=/home/buildbot/source/staging_dir/host/bin:$PATH 源码准备 在 openwrt 的源码目录创建一个 helloworld 目录，并创建 helloworld.c 文件。 mkdir helloworld touch helloworld.c helloworld.c 如下 #include &amp;lt;stdio.h&amp;gt; int main(void) { printf(&amp;quot;\nHello, world!\n\n&amp;quot;); return 0; } 创建 package OpenWRT 高度依赖 package 的概念，几乎所有软件都是从 package 而来，包括交叉编译工具甚至是 kernel。</description>
    </item>
  </channel>
</rss>
